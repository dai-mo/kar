#!/bin/bash


if [ -z "$1" ]
  then
    echo "Missing Bump Version parameter"
    exit 0
fi

none_key='none'
major_key='major'
patch_key='patch'


current_version="`cat version.properties | grep 'build.version' | awk -F "=" '{print $2}'`"
echo "Current Version   : "$current_version
if [ "${1,,}" == "$none_key" ]; then
  release_version=`echo ${current_version%%-*}`
fi

if [ "${1,,}" == "$major_key" ]; then
  release_version="`echo ${current_version%%-*} | awk -F "." '{print $1+1".0.0"}'`"
fi

if [ "${1,,}" == "$patch_key" ]; then
  release_version="`echo ${current_version%%-*} | awk -F "." '{print $1"."$2"."$3+1}'`"
fi

next_dev_version="`echo ${release_version%%-*} | awk -F "." '{print $1"."$2+1".0-SNAPSHOT"}'`"

echo "Release Version   : "$release_version
echo "Next Dev Version  : "$next_dev_version

mvn versions:set -DnewVersion=$release_version
sed -i "s/\(build\.version\s*=\s*\).*$/\1$release_version/" version.properties

git add version.properties pom.xml
git commit -m "Setting version to $release_version"
git tag v$release_version
git push origin $branch

mvn versions:set -DnewVersion=$next_dev_version
sed -i "s/\(build\.version\s*=\s*\).*$/\1$next_dev_version/" version.properties

git add version.properties pom.xml
git commit -m "Setting version to $next_dev_version"
git push origin $branch
